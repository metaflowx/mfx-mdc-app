export const VCABI = [
  { inputs: [], stateMutability: "nonpayable", type: "constructor" },
  { inputs: [], name: "AlreadyInitialize", type: "error" },
  { inputs: [], name: "ClaimCooldownPeriodNotOver", type: "error" },
  { inputs: [], name: "DisablePlan", type: "error" },
  { inputs: [], name: "InsufficientAmount", type: "error" },
  { inputs: [], name: "InsufficientRewardAllocation", type: "error" },
  { inputs: [], name: "InvalidAddress", type: "error" },
  {
    inputs: [
      { internalType: "uint256", name: "startIndex", type: "uint256" },
      { internalType: "uint256", name: "endIndex", type: "uint256" },
    ],
    name: "InvalidRange",
    type: "error",
  },
  { inputs: [], name: "MaxReturnAchieve", type: "error" },
  {
    inputs: [{ internalType: "uint256", name: "amount", type: "uint256" }],
    name: "MaxStakeAmount",
    type: "error",
  },
  {
    inputs: [{ internalType: "uint256", name: "amount", type: "uint256" }],
    name: "MinStakeAmount",
    type: "error",
  },
  { inputs: [], name: "NoTokensStake", type: "error" },
  { inputs: [], name: "OnlyIcoContributorsCanStaked", type: "error" },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  { inputs: [], name: "RestakeNotAvailable", type: "error" },
  {
    inputs: [{ internalType: "address", name: "token", type: "address" }],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  { inputs: [], name: "TokensUnstaked", type: "error" },
  { inputs: [], name: "Unauthorized", type: "error" },
  { inputs: [], name: "UnlockTimeNotReached", type: "error" },
  { inputs: [], name: "UnstakeNotAvailable", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "user", type: "address" },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDistribution",
        type: "uint256",
      },
      { indexed: false, internalType: "uint256", name: "at", type: "uint256" },
    ],
    name: "VcRewardDistributed",
    type: "event",
  },
  {
    inputs: [
      { internalType: "bool", name: "isEnabled_", type: "bool" },
      {
        internalType: "uint256",
        name: "distributionPercent_",
        type: "uint256",
      },
      { internalType: "uint256", name: "rewardDivision_", type: "uint256" },
      { internalType: "uint256", name: "minStaked_", type: "uint256" },
      { internalType: "uint256", name: "maxStaked_", type: "uint256" },
      {
        internalType: "uint256",
        name: "dailyRewardRateInPercent_",
        type: "uint256",
      },
      { internalType: "uint256", name: "returnInPercent_", type: "uint256" },
      { internalType: "uint256", name: "lockDuration_", type: "uint256" },
      { internalType: "uint256", name: "withdrawnPeriod_", type: "uint256" },
    ],
    name: "UpdatePlan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "amount_", type: "uint256" }],
    name: "addStakingRewardAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addVcTreasureDistributionAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "user_", type: "address" },
      { internalType: "uint256", name: "index_", type: "uint256" },
    ],
    name: "calculateRewards",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "user_", type: "address" },
      { internalType: "uint256", name: "index_", type: "uint256" },
    ],
    name: "checkMaxReturn",
    outputs: [
      { internalType: "bool", name: "", type: "bool" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "index_", type: "uint256" }],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlan",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "dailyRewardRateInPercent",
            type: "uint256",
          },
          { internalType: "uint256", name: "returnInPercent", type: "uint256" },
          { internalType: "uint256", name: "minStaked", type: "uint256" },
          { internalType: "uint256", name: "maxStaked", type: "uint256" },
          {
            internalType: "uint256",
            name: "distributionPercent",
            type: "uint256",
          },
          { internalType: "uint256", name: "rewardDivision", type: "uint256" },
          { internalType: "uint256", name: "lockPeriod", type: "uint256" },
          { internalType: "uint256", name: "withdrawnPeriod", type: "uint256" },
          { internalType: "bool", name: "isEnabled", type: "bool" },
        ],
        internalType: "struct IMDCVC.Plan",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "startIndex_", type: "uint256" },
      { internalType: "uint256", name: "endIndex_", type: "uint256" },
    ],
    name: "getStakers",
    outputs: [{ internalType: "address[]", name: "result", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "account_", type: "address" }],
    name: "getUserSpecialDistributionRewardDetail",
    outputs: [
      { internalType: "uint256[]", name: "rewardsPerMonth", type: "uint256[]" },
      { internalType: "uint256", name: "remaining", type: "uint256" },
      { internalType: "uint256", name: "claimed", type: "uint256" },
      { internalType: "uint256", name: "totalMonthly", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "mdcToken_", type: "address" },
      { internalType: "address", name: "usdtToken_", type: "address" },
      { internalType: "address", name: "vcTreasureWallet_", type: "address" },
      { internalType: "address", name: "mdcIcoContract_", type: "address" },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mdcIcoContract",
    outputs: [{ internalType: "contract IMDCICO", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mdcToken",
    outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "amount_", type: "uint256" }],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewards",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "user_", type: "address" }],
    name: "totalStakedLengthForUser",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakersLength",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVcStakingRewardAllocation",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVcTreasureDistributionAllocation",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "contract IERC20", name: "token_", type: "address" },
      { internalType: "address", name: "to_", type: "address" },
      { internalType: "uint256", name: "amount_", type: "uint256" },
    ],
    name: "transferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "account_", type: "address" },
      { internalType: "uint256", name: "index_", type: "uint256" },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdtToken",
    outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "user_", type: "address" }],
    name: "user2Staker",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "amount", type: "uint256" },
          { internalType: "uint256", name: "volume", type: "uint256" },
          { internalType: "uint256", name: "claimedRewards", type: "uint256" },
          { internalType: "uint256", name: "startTime", type: "uint256" },
          { internalType: "uint256", name: "lastClaimTime", type: "uint256" },
          { internalType: "bool", name: "isUnstaked", type: "bool" },
        ],
        internalType: "struct IMDCVC.Staker",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "user_", type: "address" },
      { internalType: "uint256", name: "startIndex_", type: "uint256" },
      { internalType: "uint256", name: "endIndex_", type: "uint256" },
    ],
    name: "user2StakerList",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "amount", type: "uint256" },
          { internalType: "uint256", name: "volume", type: "uint256" },
          { internalType: "uint256", name: "claimedRewards", type: "uint256" },
          { internalType: "uint256", name: "startTime", type: "uint256" },
          { internalType: "uint256", name: "lastClaimTime", type: "uint256" },
          { internalType: "bool", name: "isUnstaked", type: "bool" },
        ],
        internalType: "struct IMDCVC.Staker[]",
        name: "result",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vcStakingSupply",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vcTreasureWallet",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
] as const;
